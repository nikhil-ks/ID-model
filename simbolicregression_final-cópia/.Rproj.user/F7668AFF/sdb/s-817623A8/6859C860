{
    "collab_server" : "",
    "contents" : "RLEstimar <- function(Xe, RL) {\n  #  Modelo 1 e 2\n  #  Xe - Variaveis explicativas para estimar\n  #  RL - parametros resultantes dos modelos: a1, b1, ... ap,bp,const\n\n  Xe <- as.matrix(Xe)\n\n  parametros <- matrix(RL[-length(RL)], (length(RL) - 1) / 2, 2, byrow = TRUE)\n\n  parametros_raios <- as.matrix(parametros[, 1] + parametros[, 2])\n\n  parametros_centros <- rbind(as.matrix(parametros[, 1] - parametros[, 2]), RL[length(RL)])\n\n  ###############################################################################################################\n\n  Xc <- as.matrix(Xe[, seq(from = 1, to = ncol(Xe), by = 2)])    #matriz com os centros das variaveis explicativas\n  Xr <- as.matrix(Xe[, seq(from = 2, to = ncol(Xe), by = 2)])    #matriz com os raios das variáveis explicativas\n\n  ###############################################################################################################\n\n  Yec <- cbind(Xc, 1) %*% parametros_centros\n  Yer <- cbind(Xr)    %*% parametros_raios\n\n  return(cbind(Yec, Yer))\n}\n\nModelo3Previsao <- function(Xe,RL) {\n  #  Modelo 3\n  #  Xe - Variaveis explicativas para estimar\n  #  RL - parametros resultantes dos modelos: alfa, beta e gama\n\n  alfa <- RL[1]\n  beta <- RL[2]\n  gama <- RL[3]\n\n  X  <- as.matrix(Xe)\n  n  <- nrow(X)                                                #número de observações\n  Ye <- matrix(0, n, 3)\n\n  XC <- as.matrix(X[, seq(from = 1, to = ncol(X), by = 3)])    #matriz com os centros das variaveis explicativas\n  XR <- as.matrix(X[, seq(from = 2, to = ncol(X), by = 3)])    #matriz com os raios das variáveis explicativas\n  XM <- as.matrix(X[, seq(from = 3, to = ncol(X), by = 3)])    #matriz com as modas das variáveis explicativas\n\n  for(i in 1:n) {\n\n    Xc <- XC[i, ]\n    Xr <- XR[i, ]\n    Xm <- XM[i, ]\n    Xa <- Xc - Xr\n    Xb <- Xc + Xr\n\n    Ymest <- 0\n    Yaest <- 0\n    Ybest <- 0\n    Yrest <- 0\n    Ycest <- 0\n\n\n    if((Xm - Xa) > (Xb - Xm)) {\n      t <- (alfa^(2 / 3)) / ((alfa^(2 / 3)) + beta^(2 / 3))\n      if((alfa > ((beta * (Xb - Xm)^(3 / 2)) / (Xm - Xa)^(3 / 2))) & (alfa < ((beta * (Xm - Xa)^(3 / 2)) / (Xb - Xm)^(3 / 2)))) {\n        Ye[i,3] <- (alfa-beta)*Xa + sqrt((Xb-Xa)*(Xm-Xa))*((alfa^(4/3)-beta^(4/3))/sqrt(alfa^(2/3)+beta^(2/3))) + gama\n        Yaest   <- alfa * Xa - beta * Xb + gama\n        Ybest   <- alfa * Xb - beta * Xa + gama\n        Ye[i,1] <- (Ybest + Yaest)/2\n        Ye[i,2] <- (Ybest - Yaest)/2\n      } else if(alfa < ((beta * (Xb - Xm) ^ (3 / 2)) / (Xm - Xa)^(3 / 2))) {\n        Ye[i,3] <- alfa * Xa - beta * Xm + alfa * sqrt((Xb-Xm) * (Xm-Xa)) + gama\n        Yaest   <- alfa * Xa - beta * Xb + gama\n        Ybest   <- alfa * Xb - beta * Xa + gama\n        Ye[i,1] <- (Ybest + Yaest)/2\n        Ye[i,2] <- (Ybest - Yaest)/2\n      } else if(alfa > ((beta * (Xm - Xa)^(3 / 2)) / (Xb - Xm)^(3 / 2))) {\n        Ye[i,3] <- alfa * Xm - beta * Xa + beta * sqrt((Xb-Xm) * (Xm-Xa)) + gama\n        Yaest   <- alfa * Xa - beta * Xb + gama\n        Ybest   <- alfa * Xb - beta * Xa + gama\n        Ye[i,1] <- (Ybest + Yaest)/2\n        Ye[i,2] <- (Ybest - Yaest)/2\n      }\n\n    } else if((Xm - Xa) < (Xb - Xm)){\n      t <- (beta^(2 / 3)) / ((alfa^(2 / 3)) + beta^(2 / 3))\n      if((alfa > ((beta * (Xm - Xa)^(3 / 2)) / (Xb - Xm)^(3 / 2))) & (alfa < ((beta * (Xb - Xm)^(3 / 2)) / (Xm - Xa)^(3 / 2)))) {\n        Ye[i,3] <- (alfa-beta)*Xb + sqrt((Xb-Xa)*(Xb-Xm))*((beta^(4/3)-alfa^(4/3))/sqrt(alfa^(2/3)+beta^(2/3))) + gama\n        Yaest   <- alfa * Xa - beta * Xb + gama\n        Ybest   <- alfa * Xb - beta * Xa + gama\n        Ye[i,1] <- (Ybest + Yaest)/2\n        Ye[i,2] <- (Ybest - Yaest)/2\n      } else if(alfa < ((beta * (Xm - Xa)^(3 / 2)) / (Xb - Xm)^(3 / 2))) {\n        Ye[i,3] <- alfa * Xb - beta * Xm + alfa * sqrt((Xb-Xm) * (Xm-Xa)) + gama\n        Yaest   <- alfa * Xa - beta * Xb + gama\n        Ybest   <- alfa * Xb - beta * Xa + gama\n        Ye[i,1] <- (Ybest + Yaest)/2\n        Ye[i,2] <- (Ybest - Yaest)/2\n      } else if(alfa > ((beta * (Xb - Xm)^(3 / 2)) / (Xm - Xa)^(3 / 2))) {\n        Ye[i,3] <- alfa * Xm - beta * Xb + alfa * sqrt((Xb-Xm) * (Xm-Xa)) + gama\n        Yaest   <- alfa * Xa - beta * Xb + gama\n        Ybest   <- alfa * Xb - beta * Xa + gama\n        Ye[i,1] <- (Ybest + Yaest)/2\n        Ye[i,2] <- (Ybest - Yaest)/2\n      }\n    } else if((Xm - Xa) == (Xb - Xm)){\n      Yaest   <- alfa * Xa - beta * Xb + gama\n      Ybest   <- alfa * Xb - beta * Xa + gama\n      Ye[i,1] <- (Ybest + Yaest)/2\n      Ye[i,2] <- (Ybest - Yaest)/2\n      Ye[i,3] <- (Ybest + Yaest)/2\n    } # if\n\n  } # for\n\n  return(Ye)\n\n}\n",
    "created" : 1502575502334.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2075082894",
    "id" : "6859C860",
    "lastKnownWriteTime" : 1502577226,
    "last_content_update" : 1502577226777,
    "path" : "D:/Users/pjmalaquias/Desktop/simbolicregression/R/Modelo_Estimar.R",
    "project_path" : "R/Modelo_Estimar.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}