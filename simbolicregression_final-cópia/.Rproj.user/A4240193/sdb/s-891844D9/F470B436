{
    "collab_server" : "",
    "contents" : "#Defini??o de constantes e par?metros\neps<-1e-6\n#Fim - Defini??o de constantes e par?metros\n\n\n\n###Defini??o de Fun??es\n\nsafesqrt <- function(x, prec=1e-6) {\n  if (length(x) == 1) return (safesqrt0(x,prec))\n  if (is.null(dim(x))) return (sapply(x,safesqrt0,prec=prec))\n  apply(x,1:lenght(dim(x)),safesqrt0,prec=prec)\n}\n\n\nsafesqrt0 <- function(x, prec=1e-6) {\n  if (x >= 0.) return (sqrt(x))\n  if (abs(x) < prec) return(0.)\n  if (abs(x) >= prec) stop(cat(\"Negative argument\",x,\"for safesqrt0\\n\"))\n}\n\n\nsafearcsin <- function(x, prec=1e-6) {\n  if (abs(x) <= 1.) return(asin(x))\n  if ((abs(x)-1.) > prec) stop(cat(\"Invalid argument for safearcsin:\",x,\"\\n\"))\n  if (x > 1.) return(asin(1.))\n  if (x < -1.) return(asin(-1.))\n}\n\n\nDistMallows2<-function(c1,r1,m1,c2,r2,m2)\n  #  Fun??o que calcula o quadrado da dist?ncia de Mallows entre intervalos com distribui??o triangular geral\n\n  #  Argumentos:\n  #     c1 -- centro do intervalo 1\n  #     r1 -- raio do intervalo 1\n  #     m1 -- moda do intervalo 1\n  #     c2 -- centro do intervalo 2\n  #     r2 -- raio do intervalo 2\n  #     m2 -- moda do intervalo 2\n\n{ #c1 <- round(c1,12)\n  #r1 <- round(r1,12)\n  #m1 <- round(m1,12)\n  #c2 <- round(c2,12)\n  #r2 <- round(r2,12)\n  #Ym2 <- round(m2,12)\n\n  aux11<-0\n  aux22<-0\n  if (abs(r1)<eps) {\n    if (abs(r2)<eps) distM2<-(c1-c2)^2\n    else if (abs(r2)>=eps) distM2<-(c1-c2)^2-r2^2/3-4/3*(m2-c2)^2+2/3*(m2-c2)*(c2-c1)+(m2-c2+r2)^3/(4*r2)+(-m2+c2+r2)^3/(4*r2)\n  }\n  else if (abs(r1)>=eps) {\n    if (abs(r2)<eps) distM2<-(c1-c2)^2-r1^2/3-4/3*(m1-c1)^2+2/3*(m1-c1)*(c1-c2)+(m1-c1+r1)^3/(4*r1)+(-m1+c1+r1)^3/(4*r1)\n    else if (abs(r2)>=eps)  {\n      aux11<-(m1-c1)/r1\n      aux22<-(m2-c2)/r2\n      z1<-safesqrt(m1-c1+r1)\n      s1<-safesqrt(c1+r1-m1)\n      z2<-safesqrt(m2-c2+r2)\n      s2<-safesqrt(c2+r2-m2)\n      sr<-safesqrt(r1*r2)\n      if ((aux11+1)/2<=(aux22+1)/2) {\n        distM2<-(c1-c2)^2+(r1-r2)^2/6+(m1-c1)^2/6+(m2-c2)^2/6-5/3*r1*r2+2/3*(m1-c1)*(c1-c2+r2)-2/3*(m2-c2)*(c1-c2+r1)+sr*z1*z2*(5-aux11)/6+sr*s1*s2*(5+aux22)/6+sr*s1*z2*(safearcsin(aux22)-safearcsin(aux11))/2\n      }\n      else if ((aux11+1)/2>(aux22+1)/2) {\n        distM2<-(c1-c2)^2+(r1-r2)^2/6+(m1-c1)^2/6+(m2-c2)^2/6-5/3*r1*r2+2/3*(m1-c1)*(c1-c2-r2)-2/3*(m2-c2)*(c1-c2-r1)+sr*z1*z2*(5-aux22)/6+sr*s1*s2*(5+aux11)/6+sr*s2*z1*(safearcsin(aux11)-safearcsin(aux22))/2\n      }\n    }\n  }\n  return(distM2)\n}\n#Fim - DistMallows2\n\n\nSumDist<-function(par,m,nvar,mcv,mrv,mmv,mlambdas)\n  #  SumDist -- Soma dos Quadrados da Dist?ncia de Mallows\n  #  Fun??o que calcula a soma dos quadrados da dist?ncia de Mallows entre as vari?veis e as combina??es lineares dos fatores\n\n  #  Argumentos:\n  #     par -- Vetor dos par?metros: li, dlim, dlsm\n  #           li   -- Limites inferiores dos intervalos dos fatores\n  #           dlim -- Dist?ncia dos limites inferiores dos intervalos dos fatores ?s modas\n  #           dlsm -- Dist?ncia dos limites superiores dos intervalos dos fatores ?s modas\n  #     m        -- N?mero de fatores\n  #     nvar     -- N?mero de vari?veis\n  #     mcv      -- Matriz dos centros das vari?veis\n#     mrv      -- Matriz dos raios das vari?veis\n#     mmv      -- Matriz das modas das vari?veis\n#     mlambdas -- Matriz dos coeficientes dos factores\n\n{\n  li<-par[1:m]\n  dlim<-par[(m+1):(2*m)]\n  dlsm<-par[(2*m+1):(3*m)]\n  cf<-c(rep(0,m))\n  rf<-c(rep(0,m))\n  mf<-c(rep(0,m))\n  cclf<-c(rep(0,nvar))\n  rclf<-c(rep(0,nvar))\n  mcrf<-c(rep(0,nvar))\n  cf<-li+(dlim+dlsm)/2        # Vetor dos centros dos factores\n  rf<-(dlim+dlsm)/2           # Vetor dos raios dos factores\n  mf<-li+dlim                 # Vetor das modas dos factores\n  cclf<-mlambdas%*%cf         # Vetor dos centros das combinacoes lineares de factores\n  rclf<-abs(mlambdas)%*%rf    # Vetor dos raios das combinacoes lineares de factores\n  mclf<-mlambdas%*%mf         # Vetor das modas das combinacoes lineares de factores\n  distM<-0\n  if (op_met==1)\n    for (j in 1:nvar) distM <- distM + DistMallows2(mcv[j],mrv[j],mmv[j],cclf[j],rclf[j],mclf[j])\n  else\n    for (j in 1:nvar)\n      distM <- distM + DistMallows2(mcv[j],mrv[j],mmv[j],cclf[j],rclf[j],mclf[j])/varerros[j]\n  return(distM)\n}\n#Fim - SumDist\n\n###Fim - Defini??o de Fun??es\n",
    "created" : 1504958529417.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "155452405",
    "id" : "F470B436",
    "lastKnownWriteTime" : 1502993436,
    "last_content_update" : 1502993436,
    "path" : "C:/Users/pjmalaquias/OneDrive - SONAE/Pessoal/Mestrado/simbolicregression_final/R/DistMallowsTriangular.R",
    "project_path" : "R/DistMallowsTriangular.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}