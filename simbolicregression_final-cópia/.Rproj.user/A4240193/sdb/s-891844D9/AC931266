{
    "collab_server" : "",
    "contents" : "getMode <- function(x){\n  xdens <- density(x)\n  modex <- xdens$x[which.max(xdens$y)]\n  return(modex)\n}\n\nToSimbolic <- function(X,m) {\n  agregador <- unique(X[,1])\n\n  if(m == 1 | m == 2) {\n\n    simbolic <- matrix(data = 0, nrow = length(agregador), ncol = 2)\n\n    for(i in 1:length(agregador)) {\n      data <- 0\n      data <- X[X[,1] == agregador[i],]\n      simbolic[i,1] <- (max(data[,2]) + min(data[,2]))/2\n      simbolic[i,2] <- (max(data[,2]) - min(data[,2]))/2\n    }\n\n    return(simbolic)\n\n  } else if(m == 3) {\n\n    simbolic <- matrix(data = 0, nrow = length(agregador), ncol =  3)\n\n    for(i in 1:length(agregador)) {\n      data <- 0\n      data <- X[X[,1] == agregador[i],]\n      simbolic[i,1] <- (max(data[,2]) + min(data[,2]))/2\n      simbolic[i,2] <- (max(data[,2]) - min(data[,2]))/2\n      if(nrow(data)==1) {simbolic[i,3] <- (max(data[,2]) + min(data[,2]))/2}\n      else{simbolic[i,3] <- getMode(data[,2])}\n    }\n    return(simbolic)\n  } else {\n\n    return(\"Escolher 1 para utilizar o modelo assumindo uma distribuição uniforme, 2 para utilizar o modelo assumindo uma distribuição triangular simétrica ou 3 para utilizar o modelo assumindo uma distribuição triangular geral\")\n  }\n}\n\nTOSIMBOLIC <- function(X,m) {\n\n  var <- ncol(X)-1\n  A <- NULL\n\n  for(i in 1:var) {\n    D <- ToSimbolic(X[,c(1,i+1)],m)\n\n    A <- cbind(A,D)\n  }\n  return(A)\n}\n",
    "created" : 1504958562825.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "847989850",
    "id" : "AC931266",
    "lastKnownWriteTime" : 1504817801,
    "last_content_update" : 1504817801,
    "path" : "C:/Users/pjmalaquias/OneDrive - SONAE/Pessoal/Mestrado/simbolicregression_final/R/ToSimbolic.R",
    "project_path" : "R/ToSimbolic.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 12,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}