{
    "collab_server" : "",
    "contents" : "OptFuction <- function(initialRL,Y,X) {\n\n  Y <- as.matrix(Y)\n  X <- as.matrix(X)\n\n  YC <- as.matrix(Y[, 1])                                      #matriz com os centros da variável resposta\n  YR <- as.matrix(Y[, 2])                                      #matriz com os raios da variável resposta\n  YM <- as.matrix(Y[, 3])                                      #matriz com as modas da variável resposta\n  XC <- as.matrix(X[, 1])    #matriz com os centros das variaveis explicativas\n  XR <- as.matrix(X[, 2])    #matriz com os raios das variáveis explicativas\n  XM <- as.matrix(X[, 3])    #matriz com as modas das variáveis explicativas                                             #número de variáveis\n  p  <- ncol(XC)\n  n  <- nrow(X)                                                #número de observações\n\n  alfa  <- initialRL[1]\n  beta  <- initialRL[2]\n  gama  <- initialRL[3]\n\n  try(if(p > 1) stop(\"model only supports one variable\"))\n\n  #---------------------------------------------------------------------------------------------------------------------#\n\n  sum <- 0\n\n  for(i in 1:n) {\n\n    Yc <- 0\n    Yr <- 0\n    Ym <- 0\n    Xc <- 0\n    Xr <- 0\n    Xm <- 0\n\n    Yc <- YC[i, ]\n    Yr <- YR[i, ]\n    Ym <- YM[i, ]\n\n    Xc <- XC[i, ]\n    Xr <- XR[i, ]\n    Xm <- XM[i, ]\n    Xa <- Xc - Xr\n    Xb <- Xc + Xr\n\n    Ymest <- 0\n    Yaest <- 0\n    Ybest <- 0\n    Yrest <- 0\n    Ycest <- 0\n\n\n    if(round((Xm - Xa),4) > round((Xb - Xm),4)) {\n      #t <- (alfa^(2 / 3)) / ((alfa^(2 / 3)) + beta^(2 / 3))\n      if((alfa > ((beta * (Xb - Xm)^(3 / 2)) / (Xm - Xa)^(3 / 2))) & (alfa < ((beta * (Xm - Xa)^(3 / 2)) / (Xb - Xm)^(3 / 2)))) {\n        Ymest <- (alfa-beta)*Xa + sqrt((Xb-Xa)*(Xm-Xa))*((alfa^(4/3)-beta^(4/3))/sqrt(alfa^(2/3)+beta^(2/3))) + gama\n        Yaest <- alfa * Xa - beta * Xb + gama\n        Ybest <- alfa * Xb - beta * Xa + gama\n        Ycest <- (Ybest + Yaest)/2\n        Yrest <- (Ybest - Yaest)/2\n      } else if(alfa <= ((beta * (Xb - Xm) ^ (3 / 2)) / (Xm - Xa)^(3 / 2))) {\n        Ymest <- alfa * Xa - beta * Xm + alfa * sqrt((Xb-Xm) * (Xm-Xa)) + gama\n        Yaest <- alfa * Xa - beta * Xb + gama\n        Ybest <- alfa * Xb - beta * Xa + gama\n        Ycest <- (Ybest + Yaest)/2\n        Yrest <- (Ybest - Yaest)/2\n      } else if(alfa >= ((beta * (Xm - Xa)^(3 / 2)) / (Xb - Xm)^(3 / 2))) {\n        Ymest <- alfa * Xm - beta * Xa + beta * sqrt((Xb-Xm) * (Xm-Xa)) + gama\n        Yaest <- alfa * Xa - beta * Xb + gama\n        Ybest <- alfa * Xb - beta * Xa + gama\n        Ycest <- (Ybest + Yaest)/2\n        Yrest <- (Ybest - Yaest)/2\n      }\n\n    } else if(round((Xm - Xa),4) < round((Xb - Xm),4)) {\n      #t <- (beta^(2 / 3)) / ((alfa^(2 / 3)) + beta^(2 / 3))\n      if((alfa > ((beta * (Xm - Xa)^(3 / 2)) / (Xb - Xm)^(3 / 2))) & (alfa < ((beta * (Xb - Xm)^(3 / 2)) / (Xm - Xa)^(3 / 2)))) {\n        Ymest <- (alfa-beta)*Xb + sqrt((Xb-Xa)*(Xb-Xm))*((beta^(4/3)-alfa^(4/3))/sqrt(alfa^(2/3)+beta^(2/3))) + gama\n        Yaest <- alfa * Xa - beta * Xb + gama\n        Ybest <- alfa * Xb - beta * Xa + gama\n        Ycest <- (Ybest + Yaest)/2\n        Yrest <- (Ybest - Yaest)/2\n      } else if(alfa <= ((beta * (Xm - Xa)^(3 / 2)) / (Xb - Xm)^(3 / 2))) {\n        Ymest <- alfa * Xb - beta * Xm + alfa * sqrt((Xb-Xm) * (Xm-Xa)) + gama\n        Yaest <- alfa * Xa - beta * Xb + gama\n        Ybest <- alfa * Xb - beta * Xa + gama\n        Ycest <- (Ybest + Yaest)/2\n        Yrest <- (Ybest - Yaest)/2\n      } else if(alfa >= ((beta * (Xb - Xm)^(3 / 2)) / (Xm - Xa)^(3 / 2))) {\n        Ymest <- alfa * Xm - beta * Xb + alfa * sqrt((Xb-Xm) * (Xm-Xa)) + gama\n        Yaest <- alfa * Xa - beta * Xb + gama\n        Ybest <- alfa * Xb - beta * Xa + gama\n        Ycest <- (Ybest + Yaest)/2\n        Yrest <- (Ybest - Yaest)/2\n      }\n    } else if(round((Xm - Xa),4) == round((Xb - Xm),4)) {\n      Yaest <- alfa * Xa - beta * Xb + gama\n      Ybest <- alfa * Xb - beta * Xa + gama\n      Ycest <- (Ybest + Yaest)/2\n      Yrest <- (Ybest - Yaest)/2\n      Ymest <- Ycest\n    } # if\n\n  DM <- DistMallows2(Yc,Yr,Ym,Ycest,Yrest,Ymest)\n  sum <- sum + DM\n  } # for\n\n  return(sum)\n\n} # function\n",
    "created" : 1503417163659.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3037457334",
    "id" : "E8630BF2",
    "lastKnownWriteTime" : 1503435660,
    "last_content_update" : 1503435660522,
    "path" : "~/Desktop/simbolicregression/R/FuncaoOtimiz.R",
    "project_path" : "R/FuncaoOtimiz.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}